let g:ale_emit_conflict_warnings = 0

" KJG's Custom
nnoremap <F5> :NumbersToggle<CR>

" Escape key remappings
inoremap jj <Esc>

" Fix syntax highlighting when scrolling too fast
noremap <F6> <Esc>:syntax sync fromstart<CR>
inoremap <F6> <C-o>:syntax sync fromstart<CR>

" Reload EditorConfig
noremap <F13> <Esc>:EditorConfigReload<CR>
inoremap <F13> <C-o>:EditorConfigReload<CR>

" Relative and Absolute Numbers
set relativenumber
set number

" Set fold level
set nofoldenable

" Sparkup Settings
let g:sparkupExecuteMapping = '<c-l>'

" Attempt to get EditorConfig to load, reference: https://github.com/editorconfig/editorconfig/issues/132
if count(g:spf13_bundle_groups, 'editorconfig-vim')
    let g:EditorConfig_core_mode = 'external_command'
    let g:EditorConfig_verbose = 1
endif
" Emmet Settings
let g:user_emmet_leader_key='<c-z>'

" Vim Instant Markdown (https://github.com/suan/vim-instant-markdown)
let g:instant_markdown_autostart=0

" easytags mad slow, move to async updates
let g:easytags_async=1

" us tslint for typescript
let g:syntastic_typescript_checkers = ['tslint']

" https://github.com/w0rp/ale#usage-linting
let g:ale_lint_on_text_changed = 'never'

let g:syntastic_mode_map = { 'mode': 'passive', 'active_filetypes': [],'passive_filetypes': [] }
nnoremap <C-w>E :SyntasticCheck<CR> :SyntasticToggleMode<CR>

" jsdoc FTW
let g:javascript_plugin_jsdoc = 1

" tsuquyomi https://github.com/Quramy/tsuquyomi
let g:tsuquyomi_disable_quickfix = 1
let g:syntastic_typescript_checkers = ['tsuquyomi']
" https://github.com/Quramy/tsuquyomi/issues/174
let g:tsuquyomi_use_vimproc=1

" https://github.com/hashivim/vim-terraform
let g:terraform_align=1

" Allow ejs files to be read as html
" ref: http://stackoverflow.com/questions/4597721/syntax-highlight-for-ejs-files-in-vim
"set au BufNewFile,BufRead *.ejs set filetype=html

" Change for set column color
if exists('+colorcolumn')
  set colorcolumn=80
else
  au BufWinEnter * let w:m2=matchadd('ErrorMsg', '\%>80v.\+', -1)
endif

augroup vimrc_autocmds
  autocmd BufEnter * highlight OverLength ctermbg=red ctermfg=white guibg=#592929
  autocmd BufEnter * match OverLength /\%80v.*/
augroup END

" Prettier neoformatting
"autocmd BufWritePre *.ts Neoformat
autocmd BufWritePre *.js Neoformat

" Set syntax highlighting for scala
autocmd BufRead,BufNewFile *.scala set filetype=scala

" Set syntax highligting for typescript
autocmd BufNewFile,BufRead *.ts set syntax=typescript
au BufReadPost *.ts set syntax=typescript

" Set syntax highlighting for Jenkins files
autocmd BufNewFile,BufRead Jenkinsfile set filetype=groovy

" Configures CtrlP to use git or silver searcher for autocompletion
" http://sheerun.net/2014/03/21/how-to-boost-your-vim-productivity/
" custom ctrlp ignore settings
unlet g:ctrlp_custom_ignore
unlet g:ctrlp_user_command
let g:ctrlp_use_caching=0

" Forever store undos
set undofile
set undodir=~/.vim/undodir

if executable('ag')
    set grepprg=ag\ --nogroup\ --nocolor

    let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'
else
  let g:ctrlp_user_command = ['.git', 'cd %s && git ls-files . -co --exclude-standard', 'find %s -type f']
  let g:ctrlp_prompt_mappings = {
    \ 'AcceptSelection("e")': ['<space>', '<cr>', '<2-LeftMouse>'],
    \ }
endif

" allow crontab to be edited
autocmd filetype crontab setlocal nobackup nowritebackup
